/* ***********************************************************************************
 * 
 * 		Generated by BankFusion Workbench Code Generator on: Wed Jun 12 17:38:58 IST 2024
 * 		Copyright (c) Misys Banking Systems. All Rights Reserved.
 * 		BankFusion User : brad System User : Admin
 * 
 * **********************************************************************************//**
 * 
 * DO NOT CHANGE MANUALLY - THIS IS AUTOMATICALLY GENERATED CODE.<br>
 * This will be overwritten by any subsequent code-generation.
 *
 */
package com.trapedza.bankfusion.mf.refimpl;
import bf.com.misys.bankfusion.attributes.UserDefinedFld;
import com.trapedza.bankfusion.messaging.transformations.email.*;
import com.trapedza.bankfusion.querybuilder.Query;
import java.util.HashMap;
import com.trapedza.bankfusion.bpd.*;
import com.trapedza.bankfusion.servercommon.commands.AbstractCommand;
import bf.com.misys.bankfusion.attributes.UserDefinedFields;
import java.util.ArrayList;
import com.trapedza.bankfusion.utils.Utils;
import java.math.BigDecimal;
import com.trapedza.bankfusion.messaging.core.*;
import com.trapedza.bankfusion.messaging.transformations.*;
import com.trapedza.bankfusion.core.attributes.AttributeTypeFactory;
import java.util.Vector;
import com.trapedza.bankfusion.servercommon.microflow.*;
import java.util.Map;
import java.sql.*;
import com.trapedza.bankfusion.microflow.*;
import com.misys.bankfusion.common.Wrapper;
import java.util.Hashtable;
import com.trapedza.bankfusion.validator.ValidatorHelper;
import com.trapedza.bankfusion.core.attributes.Attribute;
import com.trapedza.bankfusion.core.*;
import com.trapedza.bankfusion.persistence.services.repository.IRepositoryService;
import java.util.Iterator;
import java.awt.Font;
import com.trapedza.bankfusion.servercommon.eventcodes.ServerCommonEventCodes;
import com.trapedza.bankfusion.servercommon.commands.BankFusionEnvironment;
import com.misys.bankfusion.common.runtime.toolkit.rules.IRuleExecutor;
import java.util.List;
import com.trapedza.bankfusion.servercommon.services.ServiceManager;
import com.trapedza.bankfusion.servercommon.*;
import com.misys.bankfusion.common.UDFTagInformation;
import com.trapedza.bankfusion.servercommon.expression.ExpressionHelper;
import com.trapedza.bankfusion.core.attributes.ComplexDataAttributes;
public class _MFCE_LEN_KFWValidateUDF_SRV_0 extends ActivityGroup  {

IRepositoryService repositoryService = (IRepositoryService)ServiceManager.getService(ServiceManager.REPOSITORY_SERVICE);

com.trapedza.bankfusion.servercommon.steps.refimpl.IStartFatom stepStart_Step0_0;
ActivityStep activityStepStart_Step0_0;

com.trapedza.bankfusion.steps.refimpl.ICE_LEN_GetProductID stepCE_LEN_GetProductID2_2;
ActivityStep activityStepCE_LEN_GetProductID2_2;

com.trapedza.bankfusion.servercommon.steps.refimpl.IEndFatom stepEndFatom1_1;
ActivityStep activityStepEndFatom1_1;

public void init(BankFusionEnvironment env) throws BankFusionException {

	stepStart_Step0_0 = (com.trapedza.bankfusion.servercommon.steps.refimpl.IStartFatom) repositoryService
			.getActivityStep("StartFatom", env);
	activityStepStart_Step0_0 = new ActivityStep("StartFatom", stepStart_Step0_0, "Start_Step0");
	stepCE_LEN_GetProductID2_2 = (com.trapedza.bankfusion.steps.refimpl.ICE_LEN_GetProductID) repositoryService
			.getActivityStep("CE_LEN_GetProductID", env);
	activityStepCE_LEN_GetProductID2_2 = new ActivityStep("CE_LEN_GetProductID", stepCE_LEN_GetProductID2_2,
			"CE_LEN_GetProductID2");
	stepEndFatom1_1 = (com.trapedza.bankfusion.servercommon.steps.refimpl.IEndFatom) repositoryService
			.getActivityStep("EndFatom", env);
	activityStepEndFatom1_1 = new ActivityStep("EndFatom", stepEndFatom1_1, "EndFatom1");
	activityStepStart_Step0_0.setInTag("accountNum", CommonConstants.EMPTY_STRING);
	stepCE_LEN_GetProductID2_2.setF_OUT_isKFWRefinanceProd(Boolean.FALSE);
	stepCE_LEN_GetProductID2_2.setF_IN_accountNum(CommonConstants.EMPTY_STRING);
	activityStepEndFatom1_1.setInTag("responseData", CommonConstants.EMPTY_STRING);
	activityStepEndFatom1_1.setInTag("accountNum", CommonConstants.EMPTY_STRING);
	Map inTagPropMap_0 = (Map) getTagPropsFromCache("_MFCE_LEN_KFWValidateUDF_SRV_0InMap_0");
	if (inTagPropMap_0 == null) {

		activityStepStart_Step0_0.setInTagProperty("accountNum", MetaDataEnum.PROP_UIDISPLAY_TYPE,
				UIDisplayType.TEXTBOX);
		activityStepStart_Step0_0.setInTagProperty("accountNum", MetaDataEnum.PROP_DATATYPE, DataType.STRING);
		activityStepStart_Step0_0.setInTagProperty("accountNum", MetaDataEnum.PROP_VISIBLE, Boolean.TRUE);
		putTagPropsToCache("_MFCE_LEN_KFWValidateUDF_SRV_0InMap_0", activityStepStart_Step0_0.getInProps());
	} else {
		activityStepStart_Step0_0.setInTagProps(inTagPropMap_0);
	}

	Map inTagPropMap_1 = (Map) getTagPropsFromCache("_MFCE_LEN_KFWValidateUDF_SRV_0InMap_1");
	if (inTagPropMap_1 == null) {

		activityStepEndFatom1_1.setInTagProperty("responseData", MetaDataEnum.PROP_UIDISPLAY_TYPE,
				UIDisplayType.TEXTBOX);
		activityStepEndFatom1_1.setInTagProperty("responseData", MetaDataEnum.PROP_DATATYPE, DataType.STRING);
		activityStepEndFatom1_1.setInTagProperty("responseData", MetaDataEnum.PROP_VISIBLE, Boolean.TRUE);
		activityStepEndFatom1_1.setInTagProperty("accountNum", MetaDataEnum.PROP_UIDISPLAY_TYPE, UIDisplayType.TEXTBOX);
		activityStepEndFatom1_1.setInTagProperty("accountNum", MetaDataEnum.PROP_DATATYPE, DataType.STRING);
		activityStepEndFatom1_1.setInTagProperty("accountNum", MetaDataEnum.PROP_VISIBLE, Boolean.TRUE);
		putTagPropsToCache("_MFCE_LEN_KFWValidateUDF_SRV_0InMap_1", activityStepEndFatom1_1.getInProps());
	} else {
		activityStepEndFatom1_1.setInTagProps(inTagPropMap_1);
	}

}

public Object process(MFState state, BankFusionEnvironment env) throws BankFusionException {

	pickData(env, activityStepStart_Step0_0);
	Map stepInputTags = activityStepStart_Step0_0.getInTags();

	stepStart_Step0_0.process(env, activityStepStart_Step0_0);

	state.storeDynamicData("2:019: :accountNum", activityStepStart_Step0_0.getInTag("accountNum"));
	stepCE_LEN_GetProductID2_2.setF_IN_accountNum(Utils.getSTRINGValue(state.popDynamicData("2:019: :accountNum")));
	stepCE_LEN_GetProductID2_2.process(env);
	storeActivityStepUDFDataInState(stepCE_LEN_GetProductID2_2.getOutDataMap(), state);

	state.storeDynamicData("1:019: :responseData",
			Utils.getSTRINGValue(stepCE_LEN_GetProductID2_2.isF_OUT_isKFWRefinanceProd()));
	endFatomPreRequisit(state, env);
	stepEndFatom1_1.process(env, activityStepEndFatom1_1);

	state.setFinished(true);

	StaticMicroFlow.passData(env, activityStepEndFatom1_1);
	state.setWithUI(false);
	state.setExecutionPoint(0);
	state.setLastExecutionPoint(0);
	return activityStepEndFatom1_1;
}

public void populateStateObject(Map dataMap, MFState state) throws BankFusionException {

}

public void pickupSubProcessData(BankFusionEnvironment env, MFState stateObject) throws BankFusionException {

}

public ActivityStep getStartFatom() {

	return activityStepStart_Step0_0;
}

public ActivityStep getEndFatom() {

	return activityStepEndFatom1_1;
}

public MessageDescriptor getIncomingMsgDescriptor(BankFusionEnvironment env) throws BankFusionException {
	return null;
}

public int determineBranchingNo(HandleableException ex) {

return -1;
}
private void endFatomPreRequisit(MFState state, BankFusionEnvironment env){
  activityStepEndFatom1_1.setInTag("responseData", state.popDynamicData("1:019: :responseData"));}
}