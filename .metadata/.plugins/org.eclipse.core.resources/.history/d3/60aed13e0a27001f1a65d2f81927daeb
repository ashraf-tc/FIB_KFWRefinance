/* ***********************************************************************************
 * 
 * 		Generated by BankFusion Workbench Code Generator on: Mon Jun 10 14:47:22 IST 2024
 * 		Copyright (c) Misys Banking Systems. All Rights Reserved.
 * 		BankFusion User : brad System User : Admin
 * 
 * **********************************************************************************//**
 * 
 * DO NOT CHANGE MANUALLY - THIS IS AUTOMATICALLY GENERATED CODE.<br>
 * This will be overwritten by any subsequent code-generation.
 *
 */
package com.trapedza.bankfusion.mf.refimpl;
import bf.com.misys.bankfusion.attributes.UserDefinedFields;
import java.util.ArrayList;
import com.trapedza.bankfusion.utils.Utils;
import java.math.BigDecimal;
import com.trapedza.bankfusion.messaging.core.*;
import com.trapedza.bankfusion.messaging.transformations.*;
import com.trapedza.bankfusion.core.attributes.AttributeTypeFactory;
import java.util.Vector;
import com.trapedza.bankfusion.servercommon.microflow.*;
import java.util.Map;
import java.sql.*;
import com.trapedza.bankfusion.microflow.*;
import com.misys.bankfusion.common.Wrapper;
import java.util.Hashtable;
import com.trapedza.bankfusion.validator.ValidatorHelper;
import com.trapedza.bankfusion.core.attributes.Attribute;
import com.trapedza.bankfusion.core.*;
import com.trapedza.bankfusion.persistence.services.repository.IRepositoryService;
import java.util.Iterator;
import java.awt.Font;
import com.trapedza.bankfusion.servercommon.eventcodes.ServerCommonEventCodes;
import com.trapedza.bankfusion.servercommon.commands.BankFusionEnvironment;
import com.misys.bankfusion.common.runtime.toolkit.rules.IRuleExecutor;
import java.util.List;
import com.trapedza.bankfusion.servercommon.services.ServiceManager;
import com.trapedza.bankfusion.servercommon.*;
import com.misys.bankfusion.common.UDFTagInformation;
import com.trapedza.bankfusion.servercommon.expression.ExpressionHelper;
import com.trapedza.bankfusion.core.attributes.ComplexDataAttributes;
public class _MFCE_LEN_RefinanceRateChange_SRV_1 extends ActivityGroup  {

IRepositoryService repositoryService = (IRepositoryService)ServiceManager.getService(ServiceManager.REPOSITORY_SERVICE);

com.trapedza.bankfusion.steps.refimpl.ICE_LEN_RefinanceRatechange stepCE_LEN_RefinanceRatechange2_2;
ActivityStep activityStepCE_LEN_RefinanceRatechange2_2;

public void init(BankFusionEnvironment env) throws BankFusionException {

	stepCE_LEN_RefinanceRatechange2_2 = (com.trapedza.bankfusion.steps.refimpl.ICE_LEN_RefinanceRatechange) repositoryService
			.getActivityStep("CE_LEN_RefinanceRatechange", env);
	activityStepCE_LEN_RefinanceRatechange2_2 = new ActivityStep("CE_LEN_RefinanceRatechange",
			stepCE_LEN_RefinanceRatechange2_2, "CE_LEN_RefinanceRatechange2");
	stepCE_LEN_RefinanceRatechange2_2.setStepName("CE_LEN_RefinanceRatechange2");
	stepCE_LEN_RefinanceRatechange2_2.setF_OUT_StatusMsg(CommonConstants.EMPTY_STRING);
	stepCE_LEN_RefinanceRatechange2_2.setF_OUT_BATCH_STATUS(Boolean.FALSE);
	stepCE_LEN_RefinanceRatechange2_2.setF_IN_PARK_ON_UI(Boolean.FALSE);
	stepCE_LEN_RefinanceRatechange2_2.setF_IN_SYNCHRONISED(Boolean.FALSE);
	stepCE_LEN_RefinanceRatechange2_2.setF_IN_DO_NOT_PARK(Boolean.FALSE);
}

public Object process(MFState state, BankFusionEnvironment env) throws BankFusionException {

	stepCE_LEN_RefinanceRatechange2_2
			.setF_IN_DO_NOT_PARK(Utils.getBOOLEANValue(state.popDynamicData("2:019: :DO_NOT_PARK")));
	stepCE_LEN_RefinanceRatechange2_2
			.setF_IN_SYNCHRONISED(Utils.getBOOLEANValue(state.popDynamicData("2:019: :SYNCHRONISED")));
	stepCE_LEN_RefinanceRatechange2_2
			.setF_IN_PARK_ON_UI(Utils.getBOOLEANValue(state.popDynamicData("2:019: :PARK_ON_UI")));
	stepCE_LEN_RefinanceRatechange2_2.process(env);
	storeActivityStepUDFDataInState(stepCE_LEN_RefinanceRatechange2_2.getOutDataMap(), state);

	getController().setIterate(true);
	state.setExecutionPoint(2);
	state.setLastExecutionPoint(1);
	return activityStepCE_LEN_RefinanceRatechange2_2;
}

public void populateStateObject(Map dataMap, MFState state) throws BankFusionException {

}

public void pickupSubProcessData(BankFusionEnvironment env, MFState stateObject) throws BankFusionException {

}

public ActivityStep getStartFatom() {

	return null;
}

public ActivityStep getEndFatom() {

	return null;
}

public MessageDescriptor getIncomingMsgDescriptor(BankFusionEnvironment env) throws BankFusionException {
	return null;
}

public int determineBranchingNo(HandleableException ex) {

return -1;
}

}