/* ***********************************************************************************
 * 
 * 		Generated by BankFusion Workbench Code Generator on: Mon Jun 10 14:36:34 IST 2024
 * 		Copyright (c) Misys Banking Systems. All Rights Reserved.
 * 		BankFusion User : brad System User : Admin
 * 
 * **********************************************************************************//**
 * 
 * DO NOT CHANGE MANUALLY - THIS IS AUTOMATICALLY GENERATED CODE.<br>
 * This will be overwritten by any subsequent code-generation.
 *
 */
package com.trapedza.bankfusion.mf.refimpl;
import com.trapedza.bankfusion.utils.Utils;
import com.trapedza.bankfusion.messaging.core.*;
import com.trapedza.bankfusion.servercommon.microflow.*;
import java.util.Map;
import com.trapedza.bankfusion.microflow.*;
import com.trapedza.bankfusion.core.*;
import com.trapedza.bankfusion.persistence.services.repository.IRepositoryService;
import com.trapedza.bankfusion.servercommon.eventcodes.ServerCommonEventCodes;
import com.trapedza.bankfusion.servercommon.commands.BankFusionEnvironment;
import com.misys.bankfusion.common.runtime.toolkit.rules.IRuleExecutor;
import java.util.List;
import com.trapedza.bankfusion.servercommon.services.ServiceManager;
import com.trapedza.bankfusion.servercommon.*;
import com.misys.bankfusion.common.UDFTagInformation;
import com.trapedza.bankfusion.servercommon.expression.ExpressionHelper;
import com.trapedza.bankfusion.core.attributes.ComplexDataAttributes;
public class _MFCE_LEN_RefinanceRateChange_PRC_1 extends ActivityGroup  {

IRepositoryService repositoryService = (IRepositoryService)ServiceManager.getService(ServiceManager.REPOSITORY_SERVICE);

com.trapedza.bankfusion.servercommon.steps.refimpl.IBusinessProcess stepUB_CMN_BatchUXEnhancement_SRV5_5;
ActivityStep activityStepUB_CMN_BatchUXEnhancement_SRV5_5;

public void init(BankFusionEnvironment env) throws BankFusionException {

	stepUB_CMN_BatchUXEnhancement_SRV5_5 = (com.trapedza.bankfusion.servercommon.steps.refimpl.IBusinessProcess) repositoryService
			.getActivityStep("BusinessProcess", env);
	activityStepUB_CMN_BatchUXEnhancement_SRV5_5 = new ActivityStep("BusinessProcess",
			stepUB_CMN_BatchUXEnhancement_SRV5_5, "UB_CMN_BatchUXEnhancement_SRV5");

	bf.com.misys.ub.types.BatchUXEnhancementRs var_5_020_BatchUXEnhancementRs = new bf.com.misys.ub.types.BatchUXEnhancementRs();
	var_5_020_BatchUXEnhancementRs.setIsStatusAvailable(Boolean.FALSE);
	var_5_020_BatchUXEnhancementRs.setBatchStatus(CommonConstants.EMPTY_STRING);
	stepUB_CMN_BatchUXEnhancement_SRV5_5.getOutputTags().put("BatchUXEnhancementRs", var_5_020_BatchUXEnhancementRs);
	stepUB_CMN_BatchUXEnhancement_SRV5_5.getInputTags().put("SUBSTITUTION_REQUIRED", Boolean.TRUE);
	stepUB_CMN_BatchUXEnhancement_SRV5_5.setF_IN_MICROFLOW_ID("UB_CMN_BatchUXEnhancement_SRV");

	bf.com.misys.ub.types.BatchUXEnhancementRq var_5_019_BatchUXEnhancementRq = new bf.com.misys.ub.types.BatchUXEnhancementRq();
	var_5_019_BatchUXEnhancementRq.setMicroflowID(CommonConstants.EMPTY_STRING);
	var_5_019_BatchUXEnhancementRq.setUniqueBatchReference(CommonConstants.EMPTY_STRING);
	var_5_019_BatchUXEnhancementRq.setIsStatusRequired(Boolean.FALSE);
	stepUB_CMN_BatchUXEnhancement_SRV5_5.getInputTags().put("BatchUXEnhancementRq", var_5_019_BatchUXEnhancementRq);
	stepUB_CMN_BatchUXEnhancement_SRV5_5.getInputTags().put("BATCH_CODE", CommonConstants.EMPTY_STRING);
	stepUB_CMN_BatchUXEnhancement_SRV5_5.getInputTags().put("isWebService", Boolean.FALSE);
	stepUB_CMN_BatchUXEnhancement_SRV5_5.getInputTags().put("PARK_ON_UI", Boolean.TRUE);
}

public Object process(MFState state, BankFusionEnvironment env) throws BankFusionException {

	pickupSubProcessData(env, state);
	stepUB_CMN_BatchUXEnhancement_SRV5_5.getInputTags().put("PARK_ON_UI", state.popDynamicData("5:019: :PARK_ON_UI"));
	stepUB_CMN_BatchUXEnhancement_SRV5_5.getInputTags().put("BATCH_CODE", state.popDynamicData("5:019: :BATCH_CODE"));
	((bf.com.misys.ub.types.BatchUXEnhancementRq) stepUB_CMN_BatchUXEnhancement_SRV5_5.getInputTags()
			.get("BatchUXEnhancementRq")).setIsBatchResumable(
					Utils.getBOOLEANValue(state.popDynamicData("5:019:BatchUXEnhancementRq:isBatchResumable")));
	stepUB_CMN_BatchUXEnhancement_SRV5_5
			.setF_IN_MICROFLOW_ID(Utils.getSTRINGValue(state.popDynamicData("5:019: :MICROFLOW_ID")));
	stepUB_CMN_BatchUXEnhancement_SRV5_5.process(env, activityStepUB_CMN_BatchUXEnhancement_SRV5_5);

	String mfID = (String) stepUB_CMN_BatchUXEnhancement_SRV5_5.getF_IN_MICROFLOW_ID();
	state.setSubProcessID(mfID);
	state.setSubstitutionRequiredForSubProcess(true);
	StaticMicroFlow.passData(env, activityStepUB_CMN_BatchUXEnhancement_SRV5_5);
	state.setExecutionPoint(2);
	state.setLastExecutionPoint(1);
	return activityStepUB_CMN_BatchUXEnhancement_SRV5_5;
}

public void populateStateObject(Map dataMap, MFState state) throws BankFusionException {

}

public void pickupSubProcessData(BankFusionEnvironment env, MFState stateObject) throws BankFusionException {

}

public ActivityStep getStartFatom() {

	return null;
}

public ActivityStep getEndFatom() {

	return null;
}

public MessageDescriptor getIncomingMsgDescriptor(BankFusionEnvironment env) throws BankFusionException {
	return null;
}

public int determineBranchingNo(HandleableException ex) {

return -1;
}

}