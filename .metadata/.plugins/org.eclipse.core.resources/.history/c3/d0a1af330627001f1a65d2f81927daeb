/* ***********************************************************************************
 * 
 * 		Generated by BankFusion Workbench Code Generator on: Mon Jun 10 14:18:26 IST 2024
 * 		Copyright (c) Misys Banking Systems. All Rights Reserved.
 * 		BankFusion User : brad System User : Admin
 * 
 * **********************************************************************************//**
 * 
 * DO NOT CHANGE MANUALLY - THIS IS AUTOMATICALLY GENERATED CODE.<br>
 * This will be overwritten by any subsequent code-generation.
 *
 */
package com.trapedza.bankfusion.mf.refimpl;
import com.trapedza.bankfusion.messaging.transformations.email.*;
import com.trapedza.bankfusion.querybuilder.Query;
import java.util.HashMap;
import com.trapedza.bankfusion.bpd.*;
import com.trapedza.bankfusion.servercommon.commands.AbstractCommand;
import bf.com.misys.bankfusion.attributes.UserDefinedFields;
import java.util.ArrayList;
import com.trapedza.bankfusion.utils.Utils;
import java.math.BigDecimal;
import com.trapedza.bankfusion.messaging.core.*;
import com.trapedza.bankfusion.messaging.transformations.*;
import com.trapedza.bankfusion.core.attributes.AttributeTypeFactory;
import java.util.Vector;
import com.trapedza.bankfusion.servercommon.microflow.*;
import java.util.Map;
import java.sql.*;
import com.trapedza.bankfusion.microflow.*;
import com.misys.bankfusion.common.Wrapper;
import java.util.Hashtable;
import com.trapedza.bankfusion.validator.ValidatorHelper;
import com.trapedza.bankfusion.core.attributes.Attribute;
import com.trapedza.bankfusion.core.*;
import com.trapedza.bankfusion.persistence.services.repository.IRepositoryService;
import java.util.Iterator;
import java.awt.Font;
import com.trapedza.bankfusion.servercommon.eventcodes.ServerCommonEventCodes;
import com.trapedza.bankfusion.servercommon.commands.BankFusionEnvironment;
import com.misys.bankfusion.common.runtime.toolkit.rules.IRuleExecutor;
import java.util.List;
import com.trapedza.bankfusion.servercommon.services.ServiceManager;
import com.trapedza.bankfusion.servercommon.*;
import com.misys.bankfusion.common.UDFTagInformation;
import com.trapedza.bankfusion.servercommon.expression.ExpressionHelper;
import com.trapedza.bankfusion.core.attributes.ComplexDataAttributes;
public class _MFCE_LEN_RefinanceRateChange_PRC_0 extends ActivityGroup  {

IRepositoryService repositoryService = (IRepositoryService)ServiceManager.getService(ServiceManager.REPOSITORY_SERVICE);

com.trapedza.bankfusion.servercommon.steps.refimpl.IStartFatom stepStart_Step0_0;
ActivityStep activityStepStart_Step0_0;

com.trapedza.bankfusion.servercommon.steps.refimpl.INullFatom stepPlaceholder2_2;
ActivityStep activityStepPlaceholder2_2;

com.trapedza.bankfusion.servercommon.steps.refimpl.IBusinessProcess stepCE_LEN_RefinanceRateChange_SCF4_4;
ActivityStep activityStepCE_LEN_RefinanceRateChange_SCF4_4;

public void init(BankFusionEnvironment env) throws BankFusionException {

	stepStart_Step0_0 = (com.trapedza.bankfusion.servercommon.steps.refimpl.IStartFatom) repositoryService
			.getActivityStep("StartFatom", env);
	activityStepStart_Step0_0 = new ActivityStep("StartFatom", stepStart_Step0_0, "Start_Step0");
	stepPlaceholder2_2 = (com.trapedza.bankfusion.servercommon.steps.refimpl.INullFatom) repositoryService
			.getActivityStep("NullFatom", env);
	activityStepPlaceholder2_2 = new ActivityStep("NullFatom", stepPlaceholder2_2, "Placeholder2");
	stepCE_LEN_RefinanceRateChange_SCF4_4 = (com.trapedza.bankfusion.servercommon.steps.refimpl.IBusinessProcess) repositoryService
			.getActivityStep("BusinessProcess", env);
	activityStepCE_LEN_RefinanceRateChange_SCF4_4 = new ActivityStep("BusinessProcess",
			stepCE_LEN_RefinanceRateChange_SCF4_4, "CE_LEN_RefinanceRateChange_SCF4");
	activityStepPlaceholder2_2.setInTag("MF_ID", "CE_LEN_RefinanceRatechange2");
	activityStepPlaceholder2_2.setInTag("TRUE_CONSTANT", Boolean.TRUE);
	activityStepPlaceholder2_2.setInTag("BATCH_CODE", "80000004");
	stepCE_LEN_RefinanceRateChange_SCF4_4.getInputTags().put("SUBSTITUTION_REQUIRED", Boolean.TRUE);
	stepCE_LEN_RefinanceRateChange_SCF4_4.setF_IN_MICROFLOW_ID("CE_LEN_RefinanceRateChange_SCF");
}

public Object process(MFState state, BankFusionEnvironment env) throws BankFusionException {

	pickData(env, activityStepStart_Step0_0);
	Map stepInputTags = activityStepStart_Step0_0.getInTags();

	stepStart_Step0_0.process(env, activityStepStart_Step0_0);

	stepPlaceholder2_2.process(env);

	stepCE_LEN_RefinanceRateChange_SCF4_4.process(env, activityStepCE_LEN_RefinanceRateChange_SCF4_4);

	String mfID = (String) stepCE_LEN_RefinanceRateChange_SCF4_4.getF_IN_MICROFLOW_ID();
	state.setSubProcessID(mfID);
	state.setSubstitutionRequiredForSubProcess(true);
	StaticMicroFlow.passData(env, activityStepCE_LEN_RefinanceRateChange_SCF4_4);
	state.setExecutionPoint(1);
	state.setLastExecutionPoint(0);
	return activityStepCE_LEN_RefinanceRateChange_SCF4_4;
}

public void populateStateObject(Map dataMap, MFState state) throws BankFusionException {

}

public void pickupSubProcessData(BankFusionEnvironment env, MFState stateObject) throws BankFusionException {

}

public ActivityStep getStartFatom() {

	return activityStepStart_Step0_0;
}

public ActivityStep getEndFatom() {

	return null;
}

public MessageDescriptor getIncomingMsgDescriptor(BankFusionEnvironment env) throws BankFusionException {
	return null;
}

public int determineBranchingNo(HandleableException ex) {

return -1;
}

}