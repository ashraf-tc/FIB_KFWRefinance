/* ***********************************************************************************
 * 
 * 		Generated by BankFusion Workbench Code Generator on: Wed Jun 05 15:39:20 IST 2024
 * 		Copyright (c) Misys Banking Systems. All Rights Reserved.
 * 		BankFusion User : brad System User : Admin
 * 
 * **********************************************************************************//**
 * 
 * DO NOT CHANGE MANUALLY - THIS IS AUTOMATICALLY GENERATED CODE.<br>
 * This will be overwritten by any subsequent code-generation.
 *
 */
package com.trapedza.bankfusion.mf.refimpl;
import com.trapedza.bankfusion.utils.Utils;
import java.math.BigDecimal;
import com.trapedza.bankfusion.messaging.core.*;
import com.trapedza.bankfusion.messaging.transformations.*;
import com.trapedza.bankfusion.core.attributes.AttributeTypeFactory;
import java.util.Vector;
import com.trapedza.bankfusion.servercommon.microflow.*;
import java.util.Map;
import java.sql.*;
import com.trapedza.bankfusion.microflow.*;
import com.misys.bankfusion.common.Wrapper;
import java.util.Hashtable;
import com.trapedza.bankfusion.validator.ValidatorHelper;
import com.trapedza.bankfusion.core.attributes.Attribute;
import com.trapedza.bankfusion.core.*;
import com.trapedza.bankfusion.persistence.services.repository.IRepositoryService;
import java.util.Iterator;
import java.awt.Font;
import com.trapedza.bankfusion.servercommon.eventcodes.ServerCommonEventCodes;
import com.trapedza.bankfusion.servercommon.commands.BankFusionEnvironment;
import com.misys.bankfusion.common.runtime.toolkit.rules.IRuleExecutor;
import java.util.List;
import com.trapedza.bankfusion.servercommon.services.ServiceManager;
import com.trapedza.bankfusion.servercommon.*;
import com.misys.bankfusion.common.UDFTagInformation;
import com.trapedza.bankfusion.servercommon.expression.ExpressionHelper;
import com.trapedza.bankfusion.core.attributes.ComplexDataAttributes;
public class _MFCE_LEN_ValidateKFWDetails_SRV_0 extends ActivityGroup  {

IRepositoryService repositoryService = (IRepositoryService)ServiceManager.getService(ServiceManager.REPOSITORY_SERVICE);

com.trapedza.bankfusion.servercommon.steps.refimpl.IStartFatom stepStart_Step0_0;
ActivityStep activityStepStart_Step0_0;

com.trapedza.bankfusion.servercommon.steps.refimpl.INullFatom stepPlaceholder3_3;
ActivityStep activityStepPlaceholder3_3;

com.trapedza.bankfusion.steps.refimpl.ICE_LEN_ValidateKFWDetails stepCE_LEN_ValidateKFWDetails2_2;
ActivityStep activityStepCE_LEN_ValidateKFWDetails2_2;

com.trapedza.bankfusion.servercommon.steps.refimpl.IEndFatom stepEndFatom1_1;
ActivityStep activityStepEndFatom1_1;

public void init(BankFusionEnvironment env) throws BankFusionException {

	stepStart_Step0_0 = (com.trapedza.bankfusion.servercommon.steps.refimpl.IStartFatom) repositoryService
			.getActivityStep("StartFatom", env);
	activityStepStart_Step0_0 = new ActivityStep("StartFatom", stepStart_Step0_0, "Start_Step0");
	stepPlaceholder3_3 = (com.trapedza.bankfusion.servercommon.steps.refimpl.INullFatom) repositoryService
			.getActivityStep("NullFatom", env);
	activityStepPlaceholder3_3 = new ActivityStep("NullFatom", stepPlaceholder3_3, "Placeholder3");
	stepCE_LEN_ValidateKFWDetails2_2 = (com.trapedza.bankfusion.steps.refimpl.ICE_LEN_ValidateKFWDetails) repositoryService
			.getActivityStep("CE_LEN_ValidateKFWDetails", env);
	activityStepCE_LEN_ValidateKFWDetails2_2 = new ActivityStep("CE_LEN_ValidateKFWDetails",
			stepCE_LEN_ValidateKFWDetails2_2, "CE_LEN_ValidateKFWDetails2");
	stepEndFatom1_1 = (com.trapedza.bankfusion.servercommon.steps.refimpl.IEndFatom) repositoryService
			.getActivityStep("EndFatom", env);
	activityStepEndFatom1_1 = new ActivityStep("EndFatom", stepEndFatom1_1, "EndFatom1");
	activityStepStart_Step0_0.setInTag("UDF_INFLOWDATE", CommonConstants.EMPTY_STRING);
	activityStepPlaceholder3_3.setInTag("Process", "BusinessDateValidation");
	stepCE_LEN_ValidateKFWDetails2_2.setF_IN_PROCESS(CommonConstants.EMPTY_STRING);
	stepCE_LEN_ValidateKFWDetails2_2.setF_IN_UDF_INFLOWDATE(CommonConstants.EMPTY_STRING);
	Map inTagPropMap_0 = (Map) getTagPropsFromCache("_MFCE_LEN_ValidateKFWDetails_SRV_0InMap_0");
	if (inTagPropMap_0 == null) {

		activityStepStart_Step0_0.setInTagProperty("UDF_INFLOWDATE", MetaDataEnum.PROP_UIDISPLAY_TYPE,
				UIDisplayType.TEXTBOX);
		activityStepStart_Step0_0.setInTagProperty("UDF_INFLOWDATE", MetaDataEnum.PROP_DATATYPE, DataType.STRING);
		activityStepStart_Step0_0.setInTagProperty("UDF_INFLOWDATE", MetaDataEnum.PROP_VISIBLE, Boolean.TRUE);
		putTagPropsToCache("_MFCE_LEN_ValidateKFWDetails_SRV_0InMap_0", activityStepStart_Step0_0.getInProps());
	} else {
		activityStepStart_Step0_0.setInTagProps(inTagPropMap_0);
	}

}

public Object process(MFState state, BankFusionEnvironment env) throws BankFusionException {

	pickData(env, activityStepStart_Step0_0);
	Map stepInputTags = activityStepStart_Step0_0.getInTags();

	stepStart_Step0_0.process(env, activityStepStart_Step0_0);

	state.storeDynamicData("2:019: :UDF_INFLOWDATE", activityStepStart_Step0_0.getInTag("UDF_INFLOWDATE"));
	stepPlaceholder3_3.process(env);

	state.storeDynamicData("2:019: :PROCESS", activityStepPlaceholder3_3.getInTag("Process"));
	stepCE_LEN_ValidateKFWDetails2_2
			.setF_IN_UDF_INFLOWDATE(Utils.getSTRINGValue(state.popDynamicData("2:019: :UDF_INFLOWDATE")));
	stepCE_LEN_ValidateKFWDetails2_2.setF_IN_PROCESS(Utils.getSTRINGValue(state.popDynamicData("2:019: :PROCESS")));
	stepCE_LEN_ValidateKFWDetails2_2.process(env);
	endFatomPreRequisit(state, env);
	stepEndFatom1_1.process(env, activityStepEndFatom1_1);

	state.setFinished(true);

	StaticMicroFlow.passData(env, activityStepEndFatom1_1);
	state.setWithUI(false);
	state.setExecutionPoint(0);
	state.setLastExecutionPoint(0);
	return activityStepEndFatom1_1;
}

public void populateStateObject(Map dataMap, MFState state) throws BankFusionException {

}

public void pickupSubProcessData(BankFusionEnvironment env, MFState stateObject) throws BankFusionException {

}

public ActivityStep getStartFatom() {

	return activityStepStart_Step0_0;
}

public ActivityStep getEndFatom() {

	return activityStepEndFatom1_1;
}

public MessageDescriptor getIncomingMsgDescriptor(BankFusionEnvironment env) throws BankFusionException {
	return null;
}

public int determineBranchingNo(HandleableException ex) {

return -1;
}
private void endFatomPreRequisit(MFState state, BankFusionEnvironment env){}
}