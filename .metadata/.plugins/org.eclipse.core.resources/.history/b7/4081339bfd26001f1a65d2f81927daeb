/* ***********************************************************************************
 * 
 * 		Generated by BankFusion Workbench Code Generator on: Mon Jun 10 13:16:54 IST 2024
 * 		Copyright (c) Misys Banking Systems. All Rights Reserved.
 * 		BankFusion User : brad System User : Admin
 * 
 * **********************************************************************************//**
 * 
 * DO NOT CHANGE MANUALLY - THIS IS AUTOMATICALLY GENERATED CODE.<br>
 * This will be overwritten by any subsequent code-generation.
 *
 */
package com.trapedza.bankfusion.mf.refimpl;
import java.math.BigDecimal;
import com.trapedza.bankfusion.messaging.core.*;
import com.trapedza.bankfusion.messaging.transformations.*;
import com.trapedza.bankfusion.core.attributes.AttributeTypeFactory;
import java.util.Vector;
import com.trapedza.bankfusion.servercommon.microflow.*;
import java.util.Map;
import java.sql.*;
import com.trapedza.bankfusion.microflow.*;
import com.misys.bankfusion.common.Wrapper;
import java.util.Hashtable;
import com.trapedza.bankfusion.validator.ValidatorHelper;
import com.trapedza.bankfusion.core.attributes.Attribute;
import com.trapedza.bankfusion.core.*;
import com.trapedza.bankfusion.persistence.services.repository.IRepositoryService;
import java.util.Iterator;
import java.awt.Font;
import com.trapedza.bankfusion.servercommon.eventcodes.ServerCommonEventCodes;
import com.trapedza.bankfusion.servercommon.commands.BankFusionEnvironment;
import com.misys.bankfusion.common.runtime.toolkit.rules.IRuleExecutor;
import java.util.List;
import com.trapedza.bankfusion.servercommon.services.ServiceManager;
import com.trapedza.bankfusion.servercommon.*;
import com.misys.bankfusion.common.UDFTagInformation;
import com.trapedza.bankfusion.servercommon.expression.ExpressionHelper;
import com.trapedza.bankfusion.core.attributes.ComplexDataAttributes;
public class _MFCE_LEN_RefinanceRateChange_PRC_2 extends ActivityGroup  {

IRepositoryService repositoryService = (IRepositoryService)ServiceManager.getService(ServiceManager.REPOSITORY_SERVICE);

com.trapedza.bankfusion.servercommon.steps.refimpl.IEndFatom stepEndFatom1_1;
ActivityStep activityStepEndFatom1_1;

public void init(BankFusionEnvironment env) throws BankFusionException {

	stepEndFatom1_1 = (com.trapedza.bankfusion.servercommon.steps.refimpl.IEndFatom) repositoryService
			.getActivityStep("EndFatom", env);
	activityStepEndFatom1_1 = new ActivityStep("EndFatom", stepEndFatom1_1, "EndFatom1");
}

public Object process(MFState state, BankFusionEnvironment env) throws BankFusionException {

	pickupSubProcessData(env, state);
	endFatomPreRequisit(state, env);
	stepEndFatom1_1.process(env, activityStepEndFatom1_1);

	state.setFinished(true);

	StaticMicroFlow.passData(env, activityStepEndFatom1_1);
	state.setWithUI(false);
	state.setExecutionPoint(0);
	state.setLastExecutionPoint(2);
	return activityStepEndFatom1_1;
}

public void populateStateObject(Map dataMap, MFState state) throws BankFusionException {

}

public void pickupSubProcessData(BankFusionEnvironment env, MFState stateObject) throws BankFusionException {

}

public ActivityStep getStartFatom() {

	return null;
}

public ActivityStep getEndFatom() {

	return activityStepEndFatom1_1;
}

public MessageDescriptor getIncomingMsgDescriptor(BankFusionEnvironment env) throws BankFusionException {
	return null;
}

public int determineBranchingNo(HandleableException ex) {

return -1;
}
private void endFatomPreRequisit(MFState state, BankFusionEnvironment env){}
}