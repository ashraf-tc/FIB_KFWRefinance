/* ***********************************************************************************
 * 
 * 		Generated by BankFusion Workbench Code Generator on: Fri May 31 11:15:45 IST 2024
 * 		Copyright (c) Misys Banking Systems. All Rights Reserved.
 * 		BankFusion User : brad System User : Admin
 * 
 * **********************************************************************************//**
 * 
 * DO NOT CHANGE MANUALLY - THIS IS AUTOMATICALLY GENERATED CODE.<br>
 * This will be overwritten by any subsequent code-generation.
 *
 */
package com.trapedza.bankfusion.mf.refimpl;
import java.util.HashMap;
import com.trapedza.bankfusion.bpd.*;
import com.trapedza.bankfusion.servercommon.commands.AbstractCommand;
import bf.com.misys.bankfusion.attributes.UserDefinedFields;
import java.util.ArrayList;
import com.trapedza.bankfusion.utils.Utils;
import java.math.BigDecimal;
import com.trapedza.bankfusion.messaging.core.*;
import com.trapedza.bankfusion.messaging.transformations.*;
import com.trapedza.bankfusion.core.attributes.AttributeTypeFactory;
import java.util.Vector;
import com.trapedza.bankfusion.servercommon.microflow.*;
import java.util.Map;
import java.sql.*;
import com.trapedza.bankfusion.microflow.*;
import com.misys.bankfusion.common.Wrapper;
import java.util.Hashtable;
import com.trapedza.bankfusion.messaging.core.MessageDescriptor;
import com.trapedza.bankfusion.validator.ValidatorHelper;
import com.trapedza.bankfusion.core.attributes.Attribute;
import com.trapedza.bankfusion.core.*;
import com.trapedza.bankfusion.persistence.services.repository.IRepositoryService;
import java.util.Iterator;
import java.awt.Font;
import com.trapedza.bankfusion.servercommon.eventcodes.ServerCommonEventCodes;
import com.trapedza.bankfusion.servercommon.commands.BankFusionEnvironment;
import com.misys.bankfusion.common.runtime.toolkit.rules.IRuleExecutor;
import java.util.List;
import com.trapedza.bankfusion.servercommon.services.ServiceManager;
import com.trapedza.bankfusion.servercommon.*;
import com.misys.bankfusion.common.UDFTagInformation;
import com.trapedza.bankfusion.servercommon.expression.ExpressionHelper;
import com.trapedza.bankfusion.core.attributes.ComplexDataAttributes;
public class _MFCE_LEN_RefinanceRateChange_SCF_0 extends ActivityGroup  {

IRepositoryService repositoryService = (IRepositoryService)ServiceManager.getService(ServiceManager.REPOSITORY_SERVICE);

com.trapedza.bankfusion.servercommon.steps.refimpl.IStartFatom stepStart_Step0_0;
ActivityStep activityStepStart_Step0_0;

com.trapedza.bankfusion.servercommon.steps.refimpl.IExternalInteractionStep stepExternal_Interaction_Step2_2;
ActivityStep activityStepExternal_Interaction_Step2_2;
private static HashMap<String, UDFTagInformation> udfInfo = new HashMap<String, UDFTagInformation>();

public void init(BankFusionEnvironment env) throws BankFusionException {

	stepStart_Step0_0 = (com.trapedza.bankfusion.servercommon.steps.refimpl.IStartFatom) repositoryService
			.getActivityStep("StartFatom", env);
	activityStepStart_Step0_0 = new ActivityStep("StartFatom", stepStart_Step0_0, "Start_Step0");
	stepExternal_Interaction_Step2_2 = (com.trapedza.bankfusion.servercommon.steps.refimpl.IExternalInteractionStep) repositoryService
			.getActivityStep("ExternalInteractionStep", env);
	activityStepExternal_Interaction_Step2_2 = new ActivityStep("ExternalInteractionStep",
			stepExternal_Interaction_Step2_2, "External_Interaction_Step2");

	//START CODE GEN BY PLUGIN "BFTC Message Code Generator"
	//START Outgoing BFTC message code gen
	//get published messgage descriptor
	MessageDescriptor publishedMsgDescExternal_Interaction_Step2_228 = repositoryService
			.getBftcMessage("CE_LEN_RefinanceRateBatchStarter", env);

	//initialise messge properties
	publishedMsgDescExternal_Interaction_Step2_228.setDataRepresentation("CMDHLP");
	publishedMsgDescExternal_Interaction_Step2_228.setDestination("BFTC");
	publishedMsgDescExternal_Interaction_Step2_228.setIncoming(false);
	publishedMsgDescExternal_Interaction_Step2_228.setRequest();
	publishedMsgDescExternal_Interaction_Step2_228.setRespondToSource(true);
	publishedMsgDescExternal_Interaction_Step2_228.setTimeOutPeriod(-1);
	if (publishedMsgDescExternal_Interaction_Step2_228.getScreenDefinition() != null) {
		publishedMsgDescExternal_Interaction_Step2_228.getScreenDefinition()
				.put(MetaDataEnum.PROP_BFTC_OPTIONAL_ENABLED, Boolean.valueOf(true));
		udfInfo = (HashMap<String, UDFTagInformation>) publishedMsgDescExternal_Interaction_Step2_228
				.getScreenDefinition().get(MetaDataEnum.PROP_UDF_DATA);
	}

	//initialise data of microflow tag mapping into message
	Map tagMappingsExternal_Interaction_Step2_229 = new HashMap();
	initUdfTagMappings(udfInfo, tagMappingsExternal_Interaction_Step2_229);
	publishedMsgDescExternal_Interaction_Step2_228.setMapping(tagMappingsExternal_Interaction_Step2_229);
	//initialise messge list for one outgoing bftc message
	List msgListExternal_Interaction_Step2_230 = new ArrayList(1);
	msgListExternal_Interaction_Step2_230.add(publishedMsgDescExternal_Interaction_Step2_228);
	stepExternal_Interaction_Step2_2.setMessageDescriptors(msgListExternal_Interaction_Step2_230);
	//END Outgoing BFTC message code gen
	//END CODE GEN BY PLUGIN "BFTC Message Code Generator"
}

public Object process(MFState state, BankFusionEnvironment env) throws BankFusionException {

	pickData(env, activityStepStart_Step0_0);
	Map stepInputTags = activityStepStart_Step0_0.getInTags();

	stepStart_Step0_0.process(env, activityStepStart_Step0_0);

	setEisUDFTagMappings("CE_LEN_RefinanceRateBatchStarter", udfInfo, activityStepExternal_Interaction_Step2_2,
			stepExternal_Interaction_Step2_2, state, env, repositoryService);
	executeUserExitExtension();
	stepExternal_Interaction_Step2_2.process(env, activityStepExternal_Interaction_Step2_2);

	state.setExecutionPoint(1);
	state.setLastExecutionPoint(0);
	return activityStepExternal_Interaction_Step2_2;
}

public void populateStateObject(Map dataMap, MFState state) throws BankFusionException {

}

public void pickupSubProcessData(BankFusionEnvironment env, MFState stateObject) throws BankFusionException {

}

public ActivityStep getStartFatom() {

	return activityStepStart_Step0_0;
}

public ActivityStep getEndFatom() {

	return null;
}

public MessageDescriptor getIncomingMsgDescriptor(BankFusionEnvironment env) throws BankFusionException {

	//CODE GEN BY PLUGIN "BFTC Message Code Generator"
	MessageDescriptor publishedMsgDescExternal_Interaction_Step2_21 = new MessageDescriptor();
	//initialise messge properties
	publishedMsgDescExternal_Interaction_Step2_21.setDataRepresentation("CMDHLP");
	publishedMsgDescExternal_Interaction_Step2_21.setDestination("BFTC");
	publishedMsgDescExternal_Interaction_Step2_21.setIncoming(true);
	publishedMsgDescExternal_Interaction_Step2_21.setResponse();
	publishedMsgDescExternal_Interaction_Step2_21.setRespondToSource(false);
	publishedMsgDescExternal_Interaction_Step2_21.setTimeOutPeriod(-1);
	if (publishedMsgDescExternal_Interaction_Step2_21.getScreenDefinition() != null) {
		publishedMsgDescExternal_Interaction_Step2_21.getScreenDefinition().put(MetaDataEnum.PROP_BFTC_OPTIONAL_ENABLED,
				Boolean.valueOf(true));
	} else {
		publishedMsgDescExternal_Interaction_Step2_21.setScreenDefinition(new Hashtable());
	}

	if (udfInfo != null) {
		publishedMsgDescExternal_Interaction_Step2_21.getScreenDefinition().put(MetaDataEnum.PROP_UDF_DATA, udfInfo);
	}

	//initialise data of microflow tag mapping into message
	Map tagMappingsExternal_Interaction_Step2_22 = new HashMap();
	initUdfTagMappings(udfInfo, tagMappingsExternal_Interaction_Step2_22);
	publishedMsgDescExternal_Interaction_Step2_21.setMapping(tagMappingsExternal_Interaction_Step2_22);
	return publishedMsgDescExternal_Interaction_Step2_21;
	//END CODE GEN BY PLUGIN "BFTC Message Code Generator"
}

public int determineBranchingNo(HandleableException ex) {

return -1;
}

}